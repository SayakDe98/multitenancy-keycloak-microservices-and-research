version: '3'

services:
  articles-management:
    container_name: articles-management
    build:
      context: ./services/articles-management
      dockerfile: Dockerfile
    depends_on:
      - mongo  
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - MESSAGE_BUS=amqp://rabbitmq
      - DB_URI=mongodb://mongo/test
    links:
      - rabbitmq
  mongo:
    image: mongo
    container_name: mongo
    restart: unless-stopped 
    volumes:
      - mongo_data:/data/configdb
    ports:
      - 27017:27017
  events-management:
    container_name: events-management
    build:
      context: ./services/events-management
      dockerfile: Dockerfile
    depends_on:
      - mongo    
    ports:
      - "3001:3000"
    environment:
      - PORT=3000
      - MESSAGE_BUS=amqp://rabbitmq
      - DB_URI=mongodb://mongo/test

    links:
      - rabbitmq
  user-management:
    container_name: user-management
    depends_on:
      - mongo  
    build:
      context: ./services/user-management
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - PORT=3000
      - MESSAGE_BUS=amqp://rabbitmq
      - DB_URI=mongodb://mongo/test

    links:
      - rabbitmq
  authentication:
    container_name: authentication
    build:
      context: ./services/authentication
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    environment:
      - PORT=3000
      - MESSAGE_BUS=amqp://rabbitmq
      - DB_URI=mongodb://mongo/test
    links:
      - rabbitmq
  notification:
    container_name: notification
    build:
      context: ./services/notification
      dockerfile: Dockerfile
    environment:
      - MESSAGE_BUS=amqp://rabbitmq
      - EMAIL_SERVICE=gmail
      - EMAIL_ID=noreply.localnewsapplication@gmail.com
      - EMAIL_PASSWORD=Testing0*
      - ADMIN_EMAIL=localnewsapp340ct@gmail.com
      - DB_URI=mongodb://mongo/test
    links:
      - rabbitmq
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/data

volumes:
  mongo_data:
    name: global_mongo
  rabbitmq_data:
    name: global_mq