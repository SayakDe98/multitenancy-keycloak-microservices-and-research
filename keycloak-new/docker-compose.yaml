version: "3.9"
services:

  user-service:
    container_name: healthemr
    restart: always
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    # labels:
    #   - com.datadoghq.tags.service="user-service"
    #   - com.datadoghq.tags.env="dev"
    #   - com.datadoghq.tags.version="0.0.1"
    # environment:
    #   - DD_SERVICE=user-service
    #   - DD_ENV=dev
    #   - DD_VERSION=0.0.1
    #   - DD_AGENT_HOST=datadog
    # depends_on:
    #   - datadog

  # datadog:
  #   image: datadog/agent:7
  #   pid: host
  #   environment:
  #     - DD_API_KEY=0bff2d8cff0520577e75b61d855ec496
  #     - DD_SITE=datadoghq.com
  #     - DD_APM_ENABLED=true
  #     - DD_APM_NON_LOCAL_TRAFFIC=true
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /proc/:/host/proc/:ro
  #     - ./datadog-agent/run:/opt/datadog-agent/run:rw
  #     - /sys/fs/cgroup:/host/sys/fs/cgroup:ro 
      
  postgres:
    container_name: healthemr-db
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres-db:/data/postgres
    ports:
      - "5445:5432"

  keycloak:
      container_name: healthemr-iam
      image: quay.io/keycloak/keycloak:21.1.1
      command: -Dkeycloak.profile.feature.admin_fine_grained_authz=enabled -Dkeycloak.profile.feature.token_exchange=enabled start-dev 
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: healthemr-db
        DB_DATABASE: postgres
        DB_USER: postgres
        DB_SCHEMA: public
        DB_PASSWORD: postgres
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: admin
        KEYCLOAK_LOGLEVEL: ALL
        KC_LOGL_EVEL: ALL
        ROOT_LOGLEVEL: ALL
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
        #JDBC_PARAMS: "ssl=true"
      ports:
        - 8090:8080


#Todo: to specify network for dependent services.
volumes:
  postgres-db:
    driver: local
